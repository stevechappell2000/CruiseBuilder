define("ngx-tabs/TabHeading", ["require", "exports", "@angular/core"], function (require, exports, core_1) {
    var TabHeading = (function () {
        function TabHeading(templateRef) {
            this.templateRef = templateRef;
        }
        return TabHeading;
    }());
    TabHeading = __decorate([
        core_1.Directive({
            selector: "[tabHeading]"
        }),
        __metadata("design:paramtypes", [core_1.TemplateRef])
    ], TabHeading);
    exports.TabHeading = TabHeading;
});
define("ngx-tabs/Tab", ["require", "exports", "@angular/core", "ngx-tabs/TabHeading"], function (require, exports, core_2, TabHeading_1) {
    var Tab = (function () {
        function Tab() {
            this.active = false;
            this.disabled = false;
        }
        Object.defineProperty(Tab.prototype, "headingTemplate", {
            get: function () {
                return this.heading ? this.heading.templateRef : null;
            },
            enumerable: true,
            configurable: true
        });
        ;
        return Tab;
    }());
    __decorate([
        core_2.ContentChild(TabHeading_1.TabHeading),
        __metadata("design:type", TabHeading_1.TabHeading)
    ], Tab.prototype, "heading", void 0);
    __decorate([
        core_2.Input(),
        __metadata("design:type", String)
    ], Tab.prototype, "title", void 0);
    __decorate([
        core_2.Input(),
        __metadata("design:type", Object)
    ], Tab.prototype, "active", void 0);
    __decorate([
        core_2.Input(),
        __metadata("design:type", Object)
    ], Tab.prototype, "disabled", void 0);
    Tab = __decorate([
        core_2.Component({
            selector: "tab",
            template: "<ng-content *ngIf=\"active\"></ng-content>"
        })
    ], Tab);
    exports.Tab = Tab;
});
define("ngx-tabs/TabTransclude", ["require", "exports", "@angular/core"], function (require, exports, core_3) {
    var TabTransclude = (function () {
        function TabTransclude(viewRef) {
            this.viewRef = viewRef;
        }
        Object.defineProperty(TabTransclude.prototype, "tabTransclude", {
            get: function () {
                return this._tabTransclude;
            },
            set: function (templateRef) {
                this._tabTransclude = templateRef;
                if (templateRef) {
                    this.viewRef.createEmbeddedView(templateRef);
                }
            },
            enumerable: true,
            configurable: true
        });
        return TabTransclude;
    }());
    __decorate([
        core_3.Input(),
        __metadata("design:type", core_3.TemplateRef),
        __metadata("design:paramtypes", [core_3.TemplateRef])
    ], TabTransclude.prototype, "tabTransclude", null);
    TabTransclude = __decorate([
        core_3.Directive({
            selector: "[tabTransclude]"
        }),
        __metadata("design:paramtypes", [core_3.ViewContainerRef])
    ], TabTransclude);
    exports.TabTransclude = TabTransclude;
});
define("ngx-tabs/Tabset", ["require", "exports", "@angular/core", "ngx-tabs/Tab"], function (require, exports, core_4, Tab_1) {
    var Tabset = (function () {
        function Tabset() {
            this.onSelect = new core_4.EventEmitter(false);
        }
        Tabset.prototype.changeActiveTab = function (tab) {
            var tabs = this.tabs.toArray();
            tabs.forEach(function (tab) { return tab.active = false; });
            tab.active = true;
            this.onSelect.emit(tabs.indexOf(tab));
        };
        Tabset.prototype.ngAfterContentInit = function () {
            var _this = this;
            setTimeout(function () {
                var readTabs = _this.tabs.toArray();
                var activeTab = readTabs.find(function (tab) { return tab.active === true; });
                if (!activeTab && readTabs.length > 0)
                    readTabs[0].active = true;
            });
        };
        return Tabset;
    }());
    __decorate([
        core_4.Input(),
        __metadata("design:type", Boolean)
    ], Tabset.prototype, "pills", void 0);
    __decorate([
        core_4.ContentChildren(Tab_1.Tab),
        __metadata("design:type", core_4.QueryList)
    ], Tabset.prototype, "tabs", void 0);
    __decorate([
        core_4.Output(),
        __metadata("design:type", Object)
    ], Tabset.prototype, "onSelect", void 0);
    Tabset = __decorate([
        core_4.Component({
            selector: "tabset",
            template: "\n<div class=\"tabset\">\n    <ul class=\"nav\" [ngClass]=\"{ 'nav-tabs': !pills, 'nav-pills': pills }\">\n      <li role=\"presentation\" *ngFor=\"let tab of tabs\" [class.active]=\"tab.active\">\n        <a (click)=\"changeActiveTab(tab)\" class=\"btn\" [class.disabled]=\"tab.disabled\">\n            <span [tabTransclude]=\"tab.headingTemplate\">{{tab.title}}</span>\n        </a>\n        \n      </li>\n    </ul>\n    <div class=\"tabset-content\">\n        <ng-content></ng-content>    \n    </div>\n</div>\n"
        })
    ], Tabset);
    exports.Tabset = Tabset;
});
define("ngx-tabs/index", ["require", "exports", "@angular/core", "@angular/common", "ngx-tabs/Tab", "ngx-tabs/TabHeading", "ngx-tabs/Tabset", "ngx-tabs/TabTransclude", "ngx-tabs/Tab", "ngx-tabs/Tabset", "ngx-tabs/TabHeading", "ngx-tabs/TabTransclude"], function (require, exports, core_5, common_1, Tab_2, TabHeading_2, Tabset_1, TabTransclude_1, Tab_3, Tabset_2, TabHeading_3, TabTransclude_2) {
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    __export(Tab_3);
    __export(Tabset_2);
    __export(TabHeading_3);
    __export(TabTransclude_2);
    var TabsModule = (function () {
        function TabsModule() {
        }
        return TabsModule;
    }());
    TabsModule = __decorate([
        core_5.NgModule({
            imports: [
                common_1.CommonModule
            ],
            declarations: [
                Tab_2.Tab,
                TabHeading_2.TabHeading,
                Tabset_1.Tabset,
                TabTransclude_1.TabTransclude
            ],
            exports: [
                Tab_2.Tab,
                TabHeading_2.TabHeading,
                Tabset_1.Tabset,
            ]
        })
    ], TabsModule);
    exports.TabsModule = TabsModule;
});
define("ngx-tabs", ["require", "exports", "ngx-tabs/index"], function (require, exports, index_1) {
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    __export(index_1);
});
