var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
System.register("ngx-tabs/TabHeading", ["@angular/core"], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var core_1, TabHeading;
    return {
        setters: [
            function (core_1_1) {
                core_1 = core_1_1;
            }
        ],
        execute: function () {
            TabHeading = (function () {
                function TabHeading(templateRef) {
                    this.templateRef = templateRef;
                }
                return TabHeading;
            }());
            TabHeading = __decorate([
                core_1.Directive({
                    selector: "[tabHeading]"
                }),
                __metadata("design:paramtypes", [core_1.TemplateRef])
            ], TabHeading);
            exports_1("TabHeading", TabHeading);
        }
    };
});
System.register("ngx-tabs/Tab", ["@angular/core", "ngx-tabs/TabHeading"], function (exports_2, context_2) {
    "use strict";
    var __moduleName = context_2 && context_2.id;
    var core_2, TabHeading_1, Tab;
    return {
        setters: [
            function (core_2_1) {
                core_2 = core_2_1;
            },
            function (TabHeading_1_1) {
                TabHeading_1 = TabHeading_1_1;
            }
        ],
        execute: function () {
            Tab = (function () {
                function Tab() {
                    this.active = false;
                    this.disabled = false;
                }
                Object.defineProperty(Tab.prototype, "headingTemplate", {
                    get: function () {
                        return this.heading ? this.heading.templateRef : null;
                    },
                    enumerable: true,
                    configurable: true
                });
                ;
                return Tab;
            }());
            __decorate([
                core_2.ContentChild(TabHeading_1.TabHeading),
                __metadata("design:type", TabHeading_1.TabHeading)
            ], Tab.prototype, "heading", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", String)
            ], Tab.prototype, "title", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Object)
            ], Tab.prototype, "active", void 0);
            __decorate([
                core_2.Input(),
                __metadata("design:type", Object)
            ], Tab.prototype, "disabled", void 0);
            Tab = __decorate([
                core_2.Component({
                    selector: "tab",
                    template: "<ng-content *ngIf=\"active\"></ng-content>"
                })
            ], Tab);
            exports_2("Tab", Tab);
        }
    };
});
System.register("ngx-tabs/TabTransclude", ["@angular/core"], function (exports_3, context_3) {
    "use strict";
    var __moduleName = context_3 && context_3.id;
    var core_3, TabTransclude;
    return {
        setters: [
            function (core_3_1) {
                core_3 = core_3_1;
            }
        ],
        execute: function () {
            TabTransclude = (function () {
                function TabTransclude(viewRef) {
                    this.viewRef = viewRef;
                }
                Object.defineProperty(TabTransclude.prototype, "tabTransclude", {
                    get: function () {
                        return this._tabTransclude;
                    },
                    set: function (templateRef) {
                        this._tabTransclude = templateRef;
                        if (templateRef) {
                            this.viewRef.createEmbeddedView(templateRef);
                        }
                    },
                    enumerable: true,
                    configurable: true
                });
                return TabTransclude;
            }());
            __decorate([
                core_3.Input(),
                __metadata("design:type", core_3.TemplateRef),
                __metadata("design:paramtypes", [core_3.TemplateRef])
            ], TabTransclude.prototype, "tabTransclude", null);
            TabTransclude = __decorate([
                core_3.Directive({
                    selector: "[tabTransclude]"
                }),
                __metadata("design:paramtypes", [core_3.ViewContainerRef])
            ], TabTransclude);
            exports_3("TabTransclude", TabTransclude);
        }
    };
});
System.register("ngx-tabs/Tabset", ["@angular/core", "ngx-tabs/Tab"], function (exports_4, context_4) {
    "use strict";
    var __moduleName = context_4 && context_4.id;
    var core_4, Tab_1, Tabset;
    return {
        setters: [
            function (core_4_1) {
                core_4 = core_4_1;
            },
            function (Tab_1_1) {
                Tab_1 = Tab_1_1;
            }
        ],
        execute: function () {
            Tabset = (function () {
                function Tabset() {
                    this.onSelect = new core_4.EventEmitter(false);
                }
                Tabset.prototype.changeActiveTab = function (tab) {
                    var tabs = this.tabs.toArray();
                    tabs.forEach(function (tab) { return tab.active = false; });
                    tab.active = true;
                    this.onSelect.emit(tabs.indexOf(tab));
                };
                Tabset.prototype.ngAfterContentInit = function () {
                    var _this = this;
                    setTimeout(function () {
                        var readTabs = _this.tabs.toArray();
                        var activeTab = readTabs.find(function (tab) { return tab.active === true; });
                        if (!activeTab && readTabs.length > 0)
                            readTabs[0].active = true;
                    });
                };
                return Tabset;
            }());
            __decorate([
                core_4.Input(),
                __metadata("design:type", Boolean)
            ], Tabset.prototype, "pills", void 0);
            __decorate([
                core_4.ContentChildren(Tab_1.Tab),
                __metadata("design:type", core_4.QueryList)
            ], Tabset.prototype, "tabs", void 0);
            __decorate([
                core_4.Output(),
                __metadata("design:type", Object)
            ], Tabset.prototype, "onSelect", void 0);
            Tabset = __decorate([
                core_4.Component({
                    selector: "tabset",
                    template: "\n<div class=\"tabset\">\n    <ul class=\"nav\" [ngClass]=\"{ 'nav-tabs': !pills, 'nav-pills': pills }\">\n      <li role=\"presentation\" *ngFor=\"let tab of tabs\" [class.active]=\"tab.active\">\n        <a (click)=\"changeActiveTab(tab)\" class=\"btn\" [class.disabled]=\"tab.disabled\">\n            <span [tabTransclude]=\"tab.headingTemplate\">{{tab.title}}</span>\n        </a>\n        \n      </li>\n    </ul>\n    <div class=\"tabset-content\">\n        <ng-content></ng-content>    \n    </div>\n</div>\n"
                })
            ], Tabset);
            exports_4("Tabset", Tabset);
        }
    };
});
System.register("ngx-tabs/index", ["@angular/core", "@angular/common", "ngx-tabs/Tab", "ngx-tabs/TabHeading", "ngx-tabs/Tabset", "ngx-tabs/TabTransclude"], function (exports_5, context_5) {
    "use strict";
    var __moduleName = context_5 && context_5.id;
    var core_5, common_1, Tab_2, TabHeading_2, Tabset_1, TabTransclude_1, TabsModule;
    var exportedNames_1 = {
        "TabsModule": true
    };
    function exportStar_1(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default" && !exportedNames_1.hasOwnProperty(n)) exports[n] = m[n];
        }
        exports_5(exports);
    }
    return {
        setters: [
            function (core_5_1) {
                core_5 = core_5_1;
            },
            function (common_1_1) {
                common_1 = common_1_1;
            },
            function (Tab_2_1) {
                Tab_2 = Tab_2_1;
                exportStar_1(Tab_2_1);
            },
            function (TabHeading_2_1) {
                TabHeading_2 = TabHeading_2_1;
                exportStar_1(TabHeading_2_1);
            },
            function (Tabset_1_1) {
                Tabset_1 = Tabset_1_1;
                exportStar_1(Tabset_1_1);
            },
            function (TabTransclude_1_1) {
                TabTransclude_1 = TabTransclude_1_1;
                exportStar_1(TabTransclude_1_1);
            }
        ],
        execute: function () {
            TabsModule = (function () {
                function TabsModule() {
                }
                return TabsModule;
            }());
            TabsModule = __decorate([
                core_5.NgModule({
                    imports: [
                        common_1.CommonModule
                    ],
                    declarations: [
                        Tab_2.Tab,
                        TabHeading_2.TabHeading,
                        Tabset_1.Tabset,
                        TabTransclude_1.TabTransclude
                    ],
                    exports: [
                        Tab_2.Tab,
                        TabHeading_2.TabHeading,
                        Tabset_1.Tabset,
                    ]
                })
            ], TabsModule);
            exports_5("TabsModule", TabsModule);
        }
    };
});
System.register("ngx-tabs", ["ngx-tabs/index"], function (exports_6, context_6) {
    "use strict";
    var __moduleName = context_6 && context_6.id;
    function exportStar_2(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_6(exports);
    }
    return {
        setters: [
            function (index_1_1) {
                exportStar_2(index_1_1);
            }
        ],
        execute: function () {
        }
    };
});
