{"version":3,"file":"formio.component.js","sourceRoot":"","sources":["../src/formio.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnChanges,\n  ViewEncapsulation,\n  Optional,\n  ElementRef,\n  ViewChild\n} from '@angular/core';\nimport { FormioService } from './formio.service';\nimport { FormioLoader } from './formio.loader';\nimport { FormioAlerts, FormioAlert } from './formio.alerts';\nimport { FormioAppConfig } from './formio.config';\nimport {\n  FormioForm,\n  FormioOptions,\n  FormioError,\n  FormioRefreshValue\n} from './formio.common';\n\n/* tslint:disable */\nconst Formio = require('formiojs/full');\nconst _ = require('lodash');\n/* tslint:enable */\n\n/* tslint:disable */\n@Component({\n  selector: 'formio',\n  template:\n    '<div>' +\n    '<formio-loader></formio-loader>' +\n    '<formio-alerts *ngIf=\"!this.options.disableAlerts\" [alerts]=\"alerts\"></formio-alerts>' +\n    '<div #formio></div>' +\n    '</div>',\n  styleUrls: ['formio.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n/* tslint:enable */\nexport class FormioComponent implements OnInit, OnChanges {\n  public ready: Promise<object>;\n  public readyResolve: any;\n  @Input() form?: FormioForm;\n  @Input() submission?: any = {};\n  @Input() src?: string;\n  @Input() url?: string;\n  @Input() service?: FormioService;\n  @Input() options?: FormioOptions;\n  @Input() readOnly?: boolean = false;\n  @Input() viewOnly?: boolean = false;\n  @Input() hideComponents?: string[];\n  @Input() refresh?: EventEmitter<FormioRefreshValue>;\n  @Input() error?: EventEmitter<any>;\n  @Input() success?: EventEmitter<object>;\n  @Input() language?: EventEmitter<string>;\n  @Input() hooks?: any = {};\n  @Output() render: EventEmitter<object>;\n  @Output() customEvent: EventEmitter<object>;\n  @Output() submit: EventEmitter<object>;\n  @Output() prevPage: EventEmitter<object>;\n  @Output() nextPage: EventEmitter<object>;\n  @Output() beforeSubmit: EventEmitter<object>;\n  @Output() change: EventEmitter<object>;\n  @Output() invalid: EventEmitter<boolean>;\n  @Output() errorChange: EventEmitter<any>;\n  @Output() formLoad: EventEmitter<any>;\n  @ViewChild('formio') formioElement?: ElementRef;\n\n  public formio: any;\n  public initialized: boolean;\n  private alerts: FormioAlerts;\n  constructor(\n    private loader: FormioLoader,\n    @Optional() private config: FormioAppConfig\n  ) {\n    if (this.config) {\n      Formio.Formio.setBaseUrl(this.config.apiUrl);\n      Formio.Formio.setProjectUrl(this.config.appUrl);\n    } else {\n      console.warn('You must provide an AppConfig within your application!');\n    }\n\n    this.ready = new Promise((resolve: any) => {\n      this.readyResolve = resolve;\n    });\n\n    this.alerts = new FormioAlerts();\n    this.beforeSubmit = new EventEmitter();\n    this.prevPage = new EventEmitter();\n    this.nextPage = new EventEmitter();\n    this.submit = new EventEmitter();\n    this.errorChange = new EventEmitter();\n    this.invalid = new EventEmitter();\n    this.change = new EventEmitter();\n    this.customEvent = new EventEmitter();\n    this.render = new EventEmitter();\n    this.formLoad = new EventEmitter();\n    this.initialized = false;\n    this.alerts.alerts = [];\n  }\n  setForm(form: FormioForm) {\n    this.form = form;\n\n    // Only initialize a single formio instance.\n    if (this.formio) {\n      this.formio.form = this.form;\n      return;\n    }\n\n    // Create the form.\n    return Formio.Formio.createForm(\n      _.get(this.formioElement, 'nativeElement', null),\n      this.form,\n      {\n        icons: this.config ? this.config.icons : '',\n        noAlerts: true,\n        readOnly: this.readOnly,\n        viewAsHtml: this.viewOnly,\n        i18n: _.get(this.options, 'i18n', null),\n        fileService: _.get(this.options, 'fileService', null),\n        hooks: this.hooks\n      }\n    ).then((formio: any) => {\n      this.formio = formio;\n      if (this.url) {\n        this.formio.url = this.url;\n      }\n      if (this.src) {\n        this.formio.url = this.src;\n      }\n      this.formio.nosubmit = true;\n      this.formio.on('prevPage', (data: any) => this.onPrevPage(data));\n      this.formio.on('nextPage', (data: any) => this.onNextPage(data));\n      this.formio.on('change', (value: any) => this.change.emit(value));\n      this.formio.on('customEvent', (event: any) =>\n        this.customEvent.emit(event)\n      );\n      this.formio.on('submit', (submission: any) =>\n        this.submitForm(submission)\n      );\n      this.formio.on('error', (err: any) => this.onError(err));\n      this.formio.on('render', () => this.render.emit());\n      this.formio.on('formLoad', (loadedForm: any) =>\n        this.formLoad.emit(loadedForm)\n      );\n      this.loader.loading = false;\n      this.readyResolve(this.formio);\n      return this.formio;\n    });\n  }\n\n  initialize() {\n    if (this.initialized) {\n      return;\n    }\n\n    this.options = Object.assign(\n      {\n        errors: {\n          message: 'Please fix the following errors before submitting.'\n        },\n        alerts: {\n          submitMessage: 'Submission Complete.'\n        },\n        disableAlerts: false,\n        hooks: {\n          beforeSubmit: null\n        }\n      },\n      this.options\n    );\n    this.initialized = true;\n  }\n\n  ngOnInit() {\n    this.initialize();\n\n    if (this.language) {\n      this.language.subscribe((lang: string) => {\n        this.formio.language = lang;\n      });\n    }\n\n    if (this.refresh) {\n      this.refresh.subscribe((refresh: FormioRefreshValue) =>\n        this.onRefresh(refresh)\n      );\n    }\n\n    if (this.error) {\n      this.error.subscribe((err: any) => this.onError(err));\n    }\n\n    if (this.success) {\n      this.success.subscribe((message: string) => {\n        this.alerts.setAlert({\n          type: 'success',\n          message: message || _.get(this.options, 'alerts.submitMessage')\n        });\n      });\n    }\n\n    if (this.src) {\n      if (!this.service) {\n        this.service = new FormioService(this.src);\n      }\n      this.loader.loading = true;\n      this.service.loadForm({ params: { live: 1 } }).subscribe(\n        (form: FormioForm) => {\n          if (form && form.components) {\n            this.setForm(form);\n          }\n\n          // if a submission is also provided.\n          if (\n            _.isEmpty(this.submission) &&\n            this.service &&\n            this.service.formio.submissionId\n          ) {\n            this.service.loadSubmission().subscribe(\n              (submission: any) => {\n                if (this.readOnly) {\n                  this.formio.options.readOnly = true;\n                }\n                this.submission = this.formio.submission = submission;\n              },\n              err => this.onError(err)\n            );\n          }\n        },\n        err => this.onError(err)\n      );\n    }\n    if (this.url) {\n      if (!this.service) {\n        this.service = new FormioService(this.url);\n      }\n    }\n  }\n  onRefresh(refresh: FormioRefreshValue) {\n    this.ready.then(() => {\n      switch (refresh.property) {\n        case 'submission':\n          this.formio.submission = refresh.value;\n          break;\n        case 'form':\n          this.formio.form = refresh.value;\n          break;\n      }\n    });\n  }\n  ngOnChanges(changes: any) {\n    this.initialize();\n\n    if (changes.form && changes.form.currentValue) {\n      this.setForm(changes.form.currentValue);\n    }\n\n    this.ready.then(() => {\n      if (changes.submission && changes.submission.currentValue) {\n        this.formio.submission = changes.submission.currentValue;\n      }\n\n      if (changes.hideComponents) {\n        this.formio.hideComponents(changes.hideComponents.currentValue);\n      }\n    });\n  }\n  onPrevPage(data: any) {\n    this.alerts.setAlerts([]);\n    this.prevPage.emit(data);\n  }\n  onNextPage(data: any) {\n    this.alerts.setAlerts([]);\n    this.nextPage.emit(data);\n  }\n  onSubmit(submission: any, saved: boolean) {\n    if (saved) {\n      this.formio.emit('submitDone', submission);\n    }\n    this.submit.emit(submission);\n    if (!this.success) {\n      this.alerts.setAlert({\n        type: 'success',\n        message: _.get(this.options, 'alerts.submitMessage')\n      });\n    }\n  }\n  onError(err: any) {\n    this.alerts.setAlerts([]);\n    if (!err) {\n      return;\n    }\n\n    // Make sure it is an array.\n    err = err instanceof Array ? err : [err];\n\n    // Emit these errors again.\n    this.errorChange.emit(err);\n\n    // Iterate through each one and set the alerts array.\n    _.each(err, (error: any) => {\n      this.alerts.setAlert({\n        type: 'danger',\n        message: error.message || error.toString()\n      });\n    });\n  }\n  submitExecute(submission: object) {\n    if (this.service) {\n      this.service\n        .saveSubmission(submission)\n        .subscribe(\n          (sub: {}) => this.onSubmit(sub, true),\n          err => this.onError(err)\n        );\n    } else {\n      this.onSubmit(submission, false);\n    }\n  }\n  submitForm(submission: any) {\n    this.beforeSubmit.emit(submission);\n\n    // if they provide a beforeSubmit hook, then allow them to alter the submission asynchronously\n    // or even provide a custom Error method.\n    const beforeSubmit = _.get(this.options, 'hooks.beforeSubmit');\n    if (beforeSubmit) {\n      beforeSubmit(submission, (err: FormioError, sub: object) => {\n        if (err) {\n          this.onError(err);\n          return;\n        }\n        this.submitExecute(sub);\n      });\n    } else {\n      this.submitExecute(submission);\n    }\n  }\n}\n"]}