{"version":3,"file":"index.component.js","sourceRoot":"","sources":["../../src/resource/index.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACzD,OAAO,EAAE,qBAAqB,EAAE,MAAM,oBAAoB,CAAC;AAC3D,OAAO,EAAE,oBAAoB,EAAE,MAAM,mBAAmB,CAAC;;AAGzD,IAAM,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;;IAWnC,sCACS,OAA8B,EAC9B,KAAqB,EACrB,MAAc,EACd,MAA4B;QAH5B,YAAO,GAAP,OAAO,CAAuB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAsB;KACjC;IAEJ,+CAAQ,GAAR;QAAA,iBAwBC;QAvBC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,EAAE,CAAC,CACD,IAAI,CAAC,OAAO;YACZ,IAAI,CAAC,OAAO,CAAC,SAAS;YACtB,IAAI,CAAC,MAAM,CAAC,OAAO;YACnB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MACtB,CAAC,CAAC,CAAC;;YAED,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,OAAY;gBAC5C,KAAK,CAAC,OAAO,EAAE,UAAC,MAAW;oBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC;4BAC5C,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC;qBACvB;iBACF,CAAC,CAAC;;gBAGH,AADA,mCAAmC;gBACnC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC;aACrC,CAAC,CAAC;SACJ;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;SACrC;KACF;IAED,+CAAQ,GAAR,UAAS,GAAQ;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KACrE;;gBA3CF,SAAS,SAAC;oBACT,QAAQ,EAAE,yVAEqJ;iBAChK;;;;gBAXQ,qBAAqB;gBADb,cAAc;gBAAtB,MAAM;gBAEN,oBAAoB;;uCAH7B;;SAca,4BAA4B","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormioResourceService } from './resource.service';\nimport { FormioResourceConfig } from './resource.config';\n\n/* tslint:disable */\nconst _each = require('lodash/each');\n/* tslint:enable */\n\n@Component({\n  template: `\n      <formio-grid [src]=\"gridSrc\" [query]=\"gridQuery\" [onForm]=\"service.formLoaded\" (select)=\"onSelect($event)\" (error)=\"service.onError($event)\"></formio-grid>\n      <button class=\"btn btn-primary\" *ngIf=\"service.form\" routerLink=\"new\"><span class=\"glyphicon glyphicon-plus\"></span> New {{ service.form.title }}</button>`\n})\nexport class FormioResourceIndexComponent implements OnInit {\n  public gridSrc?: string;\n  public gridQuery: any;\n  constructor(\n    public service: FormioResourceService,\n    public route: ActivatedRoute,\n    public router: Router,\n    public config: FormioResourceConfig\n  ) {}\n\n  ngOnInit() {\n    this.service.initialize();\n    this.gridQuery = {};\n    if (\n      this.service &&\n      this.service.onParents &&\n      this.config.parents &&\n      this.config.parents.length\n    ) {\n      // Wait for the parents to load before loading this grid.\n      this.service.onParents.subscribe((parents: any) => {\n        _each(parents, (parent: any) => {\n          if (parent) {\n            this.gridQuery['data.' + parent.name + '._id'] =\n              parent.resource._id;\n          }\n        });\n\n        // Set the source to load the grid.\n        this.gridSrc = this.service.formUrl;\n      });\n    } else if (this.service.formUrl) {\n      this.gridSrc = this.service.formUrl;\n    }\n  }\n\n  onSelect(row: any) {\n    this.router.navigate([row._id, 'view'], { relativeTo: this.route });\n  }\n}\n"]}