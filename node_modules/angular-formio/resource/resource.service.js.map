{"version":3,"file":"resource.service.js","sourceRoot":"","sources":["../../src/resource/resource.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter, Injectable, Optional } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormioResourceConfig } from './resource.config';\nimport { FormioResources, FormioResourceMap } from './resources.service';\nimport { FormioLoader, FormioAppConfig } from '../index';\nimport { FormioRefreshValue } from '../formio.common';\n\n/* tslint:disable */\nlet Promise = require('native-promise-only');\nlet Formio = require('formiojs');\nFormio = Formio.default;\nlet FormioUtils = require('formiojs/utils');\n/* tslint:enable */\n\n@Injectable()\nexport class FormioResourceService {\n  public form: any;\n  public resource: any;\n  public resourceUrl?: string;\n  public formUrl: string;\n  public formFormio: any;\n  public formio: any;\n\n  public onParents: EventEmitter<object[]> = new EventEmitter();\n  public onIndexSelect: EventEmitter<object> = new EventEmitter();\n  public refresh: EventEmitter<FormioRefreshValue> = new EventEmitter();\n\n  public resourceLoading?: Promise<any>;\n  public resourceLoaded?: Promise<any>;\n  public resourceResolve: any;\n  public resourceReject: any;\n  public resourceId?: string;\n\n  public formLoading?: Promise<any>;\n  public formLoaded: Promise<any> = new Promise(() => {});\n  public formResolve: any;\n  public formReject: any;\n  public resources: FormioResourceMap = {};\n\n  constructor(\n    public appConfig: FormioAppConfig,\n    public config: FormioResourceConfig,\n    public loader: FormioLoader,\n    @Optional() public resourcesService: FormioResources\n  ) {\n    if (this.appConfig && this.appConfig.appUrl) {\n      Formio.setBaseUrl(this.appConfig.apiUrl);\n      Formio.setProjectUrl(this.appConfig.appUrl);\n      Formio.formOnly = this.appConfig.formOnly;\n    } else {\n      console.error('You must provide an AppConfig within your application!');\n    }\n\n    // Create the form url and load the resources.\n    this.formUrl = this.appConfig.appUrl + '/' + this.config.form;\n    this.initialize();\n  }\n\n  initialize() {\n    this.onParents = new EventEmitter();\n    this.onIndexSelect = new EventEmitter();\n    this.refresh = new EventEmitter();\n    this.resource = { data: {} };\n    this.resourceLoaded = new Promise((resolve: any, reject: any) => {\n      this.resourceResolve = resolve;\n      this.resourceReject = reject;\n    });\n    this.formLoaded = new Promise((resolve: any, reject: any) => {\n      this.formResolve = resolve;\n      this.formReject = reject;\n    });\n\n    // Add this resource service to the list of all resources in context.\n    if (this.resourcesService) {\n      this.resourcesService.resources[this.config.name] = this;\n      this.resources = this.resourcesService.resources;\n    }\n\n    this.loadForm();\n    this.setParents();\n  }\n\n  onError(error: any) {\n    if (this.resourcesService) {\n      this.resourcesService.error.emit(error);\n    }\n    throw error;\n  }\n\n  onFormError(err: any) {\n    this.formReject(err);\n    this.onError(err);\n  }\n\n  loadForm() {\n    this.formFormio = new Formio(this.formUrl);\n    this.loader.loading = true;\n    this.formLoading = this.formFormio\n      .loadForm()\n      .then(\n        (form: any) => {\n          this.form = form;\n          this.formResolve(form);\n          this.loader.loading = false;\n          return form;\n        },\n        (err: any) => this.onFormError(err)\n      )\n      .catch((err: any) => this.onFormError(err));\n    return this.formLoading;\n  }\n\n  setParents() {\n    if (!this.config.parents || !this.config.parents.length) {\n      return;\n    }\n\n    if (!this.resourcesService) {\n      console.warn(\n        'You must provide the FormioResources within your application to use nested resources.'\n      );\n      return;\n    }\n\n    // Iterate through the list of parents.\n    const parentsLoaded: Array<Promise<any>> = [];\n    this.config.parents.forEach((parent: string) => {\n      // See if this parent is already in context.\n      if (this.resources.hasOwnProperty(parent)) {\n        parentsLoaded.push(\n          this.resources[parent].resourceLoaded.then((resource: any) => {\n            // Make sure we hide the component that is the parent.\n            this.formLoaded.then(form => {\n              const component = FormioUtils.getComponent(\n                form.components,\n                parent\n              );\n              if (component) {\n                component.hidden = true;\n                this.refresh.emit({\n                  property: 'form',\n                  value: form\n                });\n              }\n            });\n\n            // Set the value of this parent in the submission data.\n            this.resource.data[parent] = resource;\n            this.refresh.emit({\n              property: 'submission',\n              value: this.resource\n            });\n\n            return {\n              name: parent,\n              resource\n            };\n          })\n        );\n      }\n    });\n\n    // When all the parents have loaded, emit that to the onParents emitter.\n    Promise.all(parentsLoaded).then((parents: any) =>\n      this.onParents.emit(parents)\n    );\n  }\n\n  onSubmissionError(err: any) {\n    this.resourceReject(err);\n    this.onError(err);\n  }\n\n  loadResource(route: ActivatedRoute) {\n    this.resourceId = route.snapshot.params['id'];\n    this.resource = { data: {} };\n    this.resourceUrl = this.appConfig.appUrl + '/' + this.config.form;\n    this.resourceUrl += '/submission/' + this.resourceId;\n    this.formio = new Formio(this.resourceUrl);\n    this.loader.loading = true;\n    this.resourceLoading = this.formio\n      .loadSubmission()\n      .then(\n        (resource: any) => {\n          this.resource = resource;\n          this.resourceResolve(resource);\n          this.loader.loading = false;\n          this.refresh.emit({\n            property: 'submission',\n            value: this.resource\n          });\n          return resource;\n        },\n        (err: any) => this.onSubmissionError(err)\n      )\n      .catch((err: any) => this.onSubmissionError(err));\n    return this.resourceLoading;\n  }\n\n  save(resource: any) {\n    const formio = resource._id ? this.formio : this.formFormio;\n    return formio\n      .saveSubmission(resource)\n      .then(\n        (saved: any) => {\n          this.resource = saved;\n          return saved;\n        },\n        (err: any) => this.onError(err)\n      )\n      .catch((err: any) => this.onError(err));\n  }\n\n  remove() {\n    return this.formio\n      .deleteSubmission()\n      .then(\n        () => {\n          this.resource = null;\n        },\n        (err: any) => this.onError(err)\n      )\n      .catch((err: any) => this.onError(err));\n  }\n}\n"]}