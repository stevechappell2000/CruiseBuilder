{
  "_args": [
    [
      {
        "raw": "dialog-polyfill@^0.4.9",
        "scope": null,
        "escapedName": "dialog-polyfill",
        "name": "dialog-polyfill",
        "rawSpec": "^0.4.9",
        "spec": ">=0.4.9 <0.5.0",
        "type": "range"
      },
      "C:\\aaagit\\CruiseBuilder\\node_modules\\formiojs"
    ]
  ],
  "_from": "dialog-polyfill@>=0.4.9 <0.5.0",
  "_id": "dialog-polyfill@0.4.9",
  "_inCache": true,
  "_location": "/dialog-polyfill",
  "_nodeVersion": "8.2.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/dialog-polyfill-0.4.9.tgz_1502806391697_0.7067735213786364"
  },
  "_npmUser": {
    "name": "samthor",
    "email": "sam.thorogood@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dialog-polyfill@^0.4.9",
    "scope": null,
    "escapedName": "dialog-polyfill",
    "name": "dialog-polyfill",
    "rawSpec": "^0.4.9",
    "spec": ">=0.4.9 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/formiojs"
  ],
  "_resolved": "https://registry.npmjs.org/dialog-polyfill/-/dialog-polyfill-0.4.9.tgz",
  "_shasum": "c690b3727c3d82e0f947bd5b910b32af8a2ef57d",
  "_shrinkwrap": null,
  "_spec": "dialog-polyfill@^0.4.9",
  "_where": "C:\\aaagit\\CruiseBuilder\\node_modules\\formiojs",
  "author": {
    "name": "The Chromium Authors"
  },
  "bugs": {
    "url": "https://github.com/GoogleChrome/dialog-polyfill/issues"
  },
  "dependencies": {},
  "description": "Polyfill for the dialog element",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-iM4ZXRLOA/qpbW6XznGOq7Iq58JoXhZGo+OMG8K3wFxvIatnMTnIancLGEKa6WYy6oTkndfb2UXQ6FGtoUBn1g==",
    "shasum": "c690b3727c3d82e0f947bd5b910b32af8a2ef57d",
    "tarball": "https://registry.npmjs.org/dialog-polyfill/-/dialog-polyfill-0.4.9.tgz"
  },
  "gitHead": "00f09fb7f8255144a44fa96eadfe434cdcc5feae",
  "homepage": "https://github.com/GoogleChrome/dialog-polyfill",
  "license": "BSD",
  "main": "dialog-polyfill.js",
  "maintainers": [
    {
      "name": "samthor",
      "email": "sam.thorogood@gmail.com"
    }
  ],
  "name": "dialog-polyfill",
  "optionalDependencies": {},
  "readme": "dialog-polyfill.js is a polyfill for `<dialog>` and `<form method=\"dialog\">`.\nCheck out [some demos](http://demo.agektmr.com/dialog/)!\n\n`<dialog>` is an element for a popup box in a web page, including a modal option which will make the rest of the page inert during use.\nThis could be useful to block a user's interaction until they give you a response, or to confirm an action.\nSee the [HTML spec](https://html.spec.whatwg.org/multipage/forms.html#the-dialog-element).\n\n## Usage\n\n### Installation\n\nYou may optionally install via NPM or Bower-\n\n    $ npm install dialog-polyfill\n    $ bower install dialog-polyfill\n\n### Supports\n\nThis polyfill works on modern versions of all major browsers. It also supports IE9 and above.\n\n### Steps\n\n1. Include the CSS in the `<head>` of your document, and the Javascript anywhere before referencing `dialogPolyfill`.\n2. Create your dialog elements within the document. See [limitations](#limitations) for more details.\n3. Register the elements using `dialogPolyfill.registerDialog()`, passing it one node at a time. This polyfill won't replace native support.\n4. Use your `<dialog>` elements!\n\n## Example\n\n```html\n<head>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"dialog-polyfill.css\" />\n</head>\n<body>\n  <dialog>\n    I'm a dialog!\n    <form method=\"dialog\">\n      <input type=\"submit\" value=\"Close\" />\n    </form>\n  </dialog>\n  <script src=\"dialog-polyfill.js\"></script>\n  <script>\n    var dialog = document.querySelector('dialog');\n    dialogPolyfill.registerDialog(dialog);\n    // Now dialog acts like a native <dialog>.\n    dialog.showModal();\n  </script>\n</body>\n```\n\n### ::backdrop\n\nIn native `<dialog>`, the backdrop is a pseudo-element.\nWhen using the polyfill, the backdrop will be an adjacent element:\n\n```css\ndialog::backdrop { /* native */\n  background-color: green;\n}\ndialog + .backdrop { /* polyfill */\n  background-color: green;\n}\n```\n\n## Limitations\n\nIn the polyfill, modal dialogs have limitations-\n\n- They should not be contained by parents that create a stacking context, see below\n- The browser's chrome may not always be accessible via the tab key\n- Changes to the CSS top/bottom values while open aren't retained\n\n### Stacking Context\n\nThe major limitation of the polyfill is that dialogs should not have parents that create [a stacking context](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context).\nThe easiest way to solve this is to move your `<dialog>` element to be a child of `<body>`.\n\nIf this isn't possible you may still be able to use the dialog.\nHowever, you may want to resolve it for two major reasons-\n\n1. The polyfill can't guarantee that the dialog will be the top-most element of your page\n2. The dialog may be positioned incorrectly as they are positioned as part of the page layout _where they are opened_ (defined by spec), and not at a fixed position in the user's browser.\n\nTo position a dialog in the center (regardless of user scroll position or stacking context), you can specify the following CSS-\n\n```css\ndialog {\n  position: fixed;\n  top: 50%;\n  transform: translate(0, -50%);\n}\n```\n\n## Extensions\n\n### Focus\n\nThe WAI-ARIA doc suggests returning focus to the previously focused element after a modal dialog is closed.\nHowever, this is not part of the dialog spec itself.\nSee [this snippet](https://gist.github.com/samthor/babe9fad4a65625b301ba482dad284d1) to add this, even to the native `dialog`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/GoogleChrome/dialog-polyfill.git"
  },
  "version": "0.4.9"
}
